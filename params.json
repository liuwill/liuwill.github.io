{
  "name": "Liuwill.GitHub.io",
  "tagline": "在CentOS上升级redis",
  "body": ">说明：之前安装的是来自wget [http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm](http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm) 的yum分发包\r\n\r\n1 首先卸载旧版本的Redis\r\n`yum remove redis`\r\n\r\n2 然后从官方网站安装最新版本，官网有手册\r\n```\r\n$ wget http://download.redis.io/releases/redis-2.8.8.tar.gz$ tar xzf redis-2.8.8.tar.gz$ cd redis-2.8.8\r\n$ make\r\n```\r\n安装完成之后redis.conf就是配置文件，src下可以找到编译好的可执行程序\r\n\r\n**mkreleasehdr.sh**\r\n**redis-benchmark******\r\n**redis-check-aof******\r\n**redis-check-dump******\r\n**redis-cli******\r\n**redis-sentinel******\r\n**redis-server**\r\n其中**redis-server**是服务程序，**redis-cli**是客户端\r\n\r\n3 将程序放到便于管理的文件夹，并且设置配置文件\r\n`$ cd src`\r\n在/usr/local/下新建文件夹redis\r\n`$ mkdir /usr/local/redis`\r\n\r\n之后把编译好的redis文件拷贝到/usr/local/redis目录\r\n 例如：\r\n`$ cp redis-server/usr/local/redis/ $ cp redis-cli/usr/local/redis/`\r\n然后把redis.conf配置文件复制到etc下 $ cd ..\r\n`$ cp redis.conf/etc/redis.conf`\r\n之后配置环境变量\r\n`$ export PATH=/usr/local/redis:$PATH`\r\n\r\n此时可以执行命令来运行redis \r\n$ emacs /etc/redis.conf\r\n$ redis-cli$ redis-server\r\n如果要以守护进程方式运行。需要设置redis.conf配置文件\r\n$ emacs /etc/redis.conf \r\ndaemonize no 将no改为yes,让redis后台运行4、将redis配置为服务首先创建服务文件\r\n$ emacs /etc/init.d/redis-server\r\n$ chmod 775 /etc/init.d/redis-server\r\n配置文件内容如下：\r\n```\r\n#\r\n# redis init file for starting up the redis daemon\r\n#\r\n# chkconfig: - 20 80\r\n# description: Starts and stops the redis daemon.\r\n\r\n# Source function library.\r\n. /etc/rc.d/init.d/functions\r\n\r\nname=\"redis-server\"\r\nexec=\"/usr/local/redis/$name\"\r\npidfile=\"/var/run/redis/redis.pid\"\r\nREDIS_CONFIG=\"/etc/redis.conf\"\r\n\r\n[ -e /etc/sysconfig/redis ] && . /etc/sysconfig/redis\r\n\r\nlockfile=/var/lock/subsys/redis\r\n\r\nstart() {\r\n[ -f $REDIS_CONFIG ] || exit 6\r\n[ -x $exec ] || exit 5\r\necho -n $\"Starting $name: \"\r\ndaemon --user ${REDIS_USER-redis} \"$exec $REDIS_CONFIG\"\r\nretval=$?\r\necho\r\n[ $retval -eq 0 ] && touch $lockfile\r\nreturn $retval\r\n}\r\n\r\nstop() {\r\necho -n $\"Stopping $name: \"\r\nkillproc -p $pidfile $name\r\nretval=$?\r\necho\r\n[ $retval -eq 0 ] && rm -f $lockfile\r\nreturn $retval\r\n}\r\n\r\nrestart() {\r\nstop\r\nstart\r\n}\r\n\r\nreload() {\r\nfalse\r\n}\r\n\r\nrh_status() {\r\nstatus -p $pidfile $name\r\n}\r\n\r\nrh_status_q() {\r\nrh_status >/dev/null 2>&1\r\n}\r\n\r\n\r\ncase \"$1\" in\r\nstart)\r\nrh_status_q && exit 0\r\n$1\r\n;;\r\nstop)\r\nrh_status_q || exit 0\r\n$1\r\n;;\r\nrestart)\r\n$1\r\n;;\r\nreload)\r\nrh_status_q || exit 7\r\n$1\r\n;;\r\nforce-reload)\r\nforce_reload\r\n;;\r\nstatus)\r\nrh_status\r\n;;\r\ncondrestart|try-restart)\r\nrh_status_q || exit 0\r\nrestart\r\n;;\r\n*)\r\necho $\"Usage: $0 {start|stop|status|restart|condrestart|try-restart}\"\r\nexit 2\r\nesac\r\nexit $?\r\n```\r\n之后就可以作为服务运行$ service redis-server start最后，配置成开机自启动$ chkconfig redis-server on",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}